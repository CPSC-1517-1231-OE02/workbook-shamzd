@page "/edmonton-oilers-roster"
@using Hockey.Data

<h3>EdmontonOilersRoster</h3>
<p>
	This Blazor component displays a list of players on the Edmonton Oilers 2023-24 roster.
	The data is loaded from a CSV file.
</p>

@if(FeedbackMessage != null)
{
	<div class="alert alert-danger">
		@FeedbackMessage
	</div>
}

@if (Players.Count > 0)
{
	<table class="table table-striped">
		<thead>
			<tr>
				<th>Name</th>
				<th>Jersey</th>
				<th>Pos</th>
				<th>Shot</th>
				<th>Height</th>
				<th>Weight</th>
				<th>Hometown</th>
				<th>DOB</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var currentPlayer in Players)
			{
				<tr>
					<td>@currentPlayer.FirstName @currentPlayer.LastName</td>
					<td>@currentPlayer.JerseyNumber</td>
					<td>@currentPlayer.Position</td>
					<td>@currentPlayer.Shot</td>
					<td>@currentPlayer.HeightInInches</td>
					<td>@currentPlayer.WeightInPounds</td>
					<td>@currentPlayer.BirthPlace</td>
					<td>@currentPlayer.DateOfBirth.ToString("d")</td>
				</tr>
			}
		</tbody>
	</table>
}

@code {

	private string? FeedbackMessage { get; set; }
	private List<HockeyPlayer> Players { get; set; } = new();

	//getting the data from the csv file in the data folder in the solution
	[Inject]
	public IWebHostEnvironment WebHostEnvironment { get; set; } = default!;

	protected override void OnInitialized()
	{
		@*Here we are getting access to the csv file within the data folder*@
		string csvFilePath = $@"{WebHostEnvironment.ContentRootPath}\Data\players.csv";

		using(StreamReader reader = new StreamReader(csvFilePath))
		{
			//Skip the header record
			reader.ReadLine();

			//read one line at a time until we reach the end of the file
			string? currentLine;
			while ((currentLine = reader.ReadLine()) != null)//end of the csv file as there will be nothing there to read
			{
				try
				{
					HockeyPlayer? currentPlayer = null;
					if((currentPlayer = HockeyPlayer.Parse(currentLine)) != null)
					{
						Players.Add(currentPlayer);
					}
				}
				catch(Exception e)
				{
					FeedbackMessage = e.Message;
				}
			}
			reader.Close();
		}

		base.OnInitialized();
	}

}
